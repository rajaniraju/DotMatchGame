[{"C:\\Users\\Rajani\\Rajani's Projects\\dot-match-game\\src\\index.js":"1","C:\\Users\\Rajani\\Rajani's Projects\\dot-match-game\\src\\App.js":"2","C:\\Users\\Rajani\\Rajani's Projects\\dot-match-game\\src\\reportWebVitals.js":"3","C:\\Users\\Rajani\\Rajani's Projects\\dot-match-game\\src\\DotMatch.jsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":203,"mtime":1618890868211,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":2334,"mtime":1618941490386,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1l91hbb",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\Rajani\\Rajani's Projects\\dot-match-game\\src\\index.js",[],["20","21"],"C:\\Users\\Rajani\\Rajani's Projects\\dot-match-game\\src\\App.js",[],"C:\\Users\\Rajani\\Rajani's Projects\\dot-match-game\\src\\reportWebVitals.js",[],"C:\\Users\\Rajani\\Rajani's Projects\\dot-match-game\\src\\DotMatch.jsx",["22"],"import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport const StarMatch = () => {\r\n    // Color Theme\r\nconst Colors = {\r\n    available: 'lightgray',\r\n    used: 'lightgreen',\r\n    wrong: 'lightcoral',\r\n    candidate: 'deepskyblue',\r\n    };\r\n    // Math science\r\nconst utils = {\r\n    // Sum an array\r\n    sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\r\n  \r\n    // create an array of numbers between min and max (edges included)\r\n    range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n  \r\n    // pick a random number between min and max (edges included)\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n  \r\n    // Given an array of numbers and a max...\r\n    // Pick a random sum (< max) from the set of all available sums in arr\r\n    randomSumIn: (arr, max) => {\r\n      const sets = [[]];\r\n      const sums = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0, len = sets.length; j < len; j++) {\r\n          const candidateSet = sets[j].concat(arr[i]);\r\n          const candidateSum = utils.sum(candidateSet);\r\n          if (candidateSum <= max) {\r\n            sets.push(candidateSet);\r\n            sums.push(candidateSum);\r\n          }\r\n        }\r\n      }\r\n      return sums[utils.random(0, sums.length - 1)];\r\n    },\r\n  };\r\n  \r\n  \r\n    return (\r\n        \r\n\t\t<div className=\"game\">\r\n\t\t\t<div className=\"help\">\r\n\t\t\t\tPick 1 or more numbers that sum to the number of stars\r\n\t\t\t</div>\r\n\t\t\t<div className=\"body\">\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t\t<div className=\"star\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<button className=\"number\">1</button>\r\n\t\t\t\t\t<button className=\"number\">2</button>\r\n\t\t\t\t\t<button className=\"number\">3</button>\r\n\t\t\t\t\t<button className=\"number\">4</button>\r\n\t\t\t\t\t<button className=\"number\">5</button>\r\n\t\t\t\t\t<button className=\"number\">6</button>\r\n\t\t\t\t\t<button className=\"number\">7</button>\r\n\t\t\t\t\t<button className=\"number\">8</button>\r\n\t\t\t\t\t<button className=\"number\">9</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"timer\">Time Remaining: 10</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":6,"column":7,"nodeType":"29","messageId":"30","endLine":6,"endColumn":13},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'Colors' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]